Servizio =  c("Rapidità", "Empatia", "Professionale", "Supporto",
"Risoluzione","problemi",  "Cordialità", "Assistenza", "vendita",
"immediata", "Efficienza", "cortese", "reclami",
"Competenza", "cliente", "Flessibilità", "Tempestività",
"Servizio", "Accoglienza", "caloroso", "gentile", "personal", "competente", "disponibile", "male",
"lento", "disorganizzato", "disordinato", "scortese", "cafone", "garanzia", "reso", "account"),
Ordini = c("Transazione", "acquisto", "pagamento", "Tempo", "consegna",
"ordine", "Opzioni", "Modalità", "ritiro",
"Rimborso", "Conferma", "Tracciabilità", "Facilità",
"Catalogo", "online","checkout", "Selezione",
"Personalizzazione", "veloce", "garantita", "garanzia", "reso", "account"),
Location = c("Accesso", "Facilitato", "Ampio", "Parcheggio", "Zona", "geografica",
"ambiente", "accogliente", "Strutture", "moderne",
"Punto", "vendita", "Facilità", "raggiungimento", "Accessibilità", "disabili",
"Prossimità","area", "centrale", "Sicurezza", "Atmosfera", "piacevole", "Posizione","strategica",
"illuminata", "Spazio", "Facile",
"tranquilla", "negozio", "posto", "affollato", "piccolo", "disordinato")))
Driver_Review <- dfm_lookup(Dfm_Totale,Driver)
Driver_Review
Driver_Conv_Rev <- convert(Driver_Review, to = "data.frame")
apply(Driver_Conv_Rev[,2:5],2,sum)
# LIBRERIE ----
install.packages("SnowballC")
library(SnowballC)
Driver <- dictionary(list(Prezzo = c("Promozione", "Risparmio", "qualità", "prezzo", "Economicità",
"economico", "concorrenziali", "sconto",
"Offerta", "Budget", "ragionevole","costo", "sostenibile",
"convenienti", "sottocosto"),
Servizio =  c("Rapidità", "Empatia", "Professionale", "Supporto",
"Risoluzione","problemi",  "Cordialità", "Assistenza", "vendita",
"immediata", "Efficienza", "cortese", "reclami",
"Competenza", "cliente", "Flessibilità", "Tempestività",
"Servizio", "Accoglienza", "caloroso", "gentile", "personal", "competente", "disponibile", "male",
"lento", "disorganizzato", "disordinato", "scortese", "cafone", "garanzia", "reso", "account"),
Ordini = c("Transazione", "acquisto", "pagamento", "Tempo", "consegna",
"ordine", "Opzioni", "Modalità", "ritiro",
"Rimborso", "Conferma", "Tracciabilità", "Facilità",
"Catalogo", "online","checkout", "Selezione",
"Personalizzazione", "veloce", "garantita", "garanzia", "reso", "account"),
Location = c("Accesso", "Facilitato", "Ampio", "Parcheggio", "Zona", "geografica",
"ambiente", "accogliente", "Strutture", "moderne",
"Punto", "vendita", "Facilità", "raggiungimento", "Accessibilità", "disabili",
"Prossimità","area", "centrale", "Sicurezza", "Atmosfera", "piacevole", "Posizione","strategica",
"illuminata", "Spazio", "Facile",
"tranquilla", "negozio", "posto", "affollato", "piccolo", "disordinato")))
Driver <- lapply(Driver, function(x) wordStem(x))
Driver
Driver <- dictionary(list(Prezzo = c("Promozione", "Risparmio", "qualità", "prezzo", "Economicità",
"economico", "concorrenziali", "sconto",
"Offerta", "Budget", "ragionevole","costo", "sostenibile",
"convenienti", "sottocosto"),
Servizio =  c("Rapidità", "Empatia", "Professionale", "Supporto",
"Risoluzione","problemi",  "Cordialità", "Assistenza", "vendita",
"immediata", "Efficienza", "cortese", "reclami",
"Competenza", "cliente", "Flessibilità", "Tempestività",
"Servizio", "Accoglienza", "caloroso", "gentile", "personal", "competente", "disponibile", "male",
"lento", "disorganizzato", "disordinato", "scortese", "cafone", "garanzia", "reso", "account"),
Ordini = c("Transazione", "acquisto", "pagamento", "Tempo", "consegna",
"ordine", "Opzioni", "Modalità", "ritiro",
"Rimborso", "Conferma", "Tracciabilità", "Facilità",
"Catalogo", "online","checkout", "Selezione",
"Personalizzazione", "veloce", "garantita", "garanzia", "reso", "account"),
Location = c("Accesso", "Facilitato", "Ampio", "Parcheggio", "Zona", "geografica",
"ambiente", "accogliente", "Strutture", "moderne",
"Punto", "vendita", "Facilità", "raggiungimento", "Accessibilità", "disabili",
"Prossimità","area", "centrale", "Sicurezza", "Atmosfera", "piacevole", "Posizione","strategica",
"illuminata", "Spazio", "Facile",
"tranquilla", "negozio", "posto", "affollato", "piccolo", "disordinato")))
Driver$Prezzo <- wordStem(Driver$Prezzo)
Driver$Servizio <- wordStem(Driver$Servizio)
Driver$Ordini <- wordStem(Driver$Ordini)
Driver$Location <- wordStem(Driver$Location)
Driver
Driver <- dictionary(list(Prezzo = c("promozione", "risparmio", "qualità", "prezzo", "economicità",
"economico", "concorrenziali", "sconto",
"offerta", "budget", "ragionevole","costo", "sostenibile",
"convenienti", "sottocosto"),
Servizio =  c("rapidità", "Empatia", "professionale", "supporto",
"risoluzione","problemi",  "cordialità", "assistenza", "vendita",
"immediata", "efficienza", "cortese", "reclami",
"competenza", "cliente", "flessibilità", "tempestività",
"servizio", "accoglienza", "caloroso", "gentile", "personal", "competente", "disponibile", "male",
"lento", "disorganizzato", "disordinato", "scortese", "cafone", "garanzia", "reso", "account"),
Ordini = c("transazione", "acquisto", "pagamento", "tempo", "consegna",
"ordine", "opzioni", "modalità", "ritiro",
"rimborso", "conferma", "tracciabilità", "facilità",
"catalogo", "online","checkout", "Ssntita", "garanzia", "reso", "account"),
Location = c("accesso", "facilitato", "ampio", "parcheggio", "zona", "geografica",
"ambiente", "accogliente", "strutture", "moderne",
"punto", "vendita", "facilità", "raggiungimento", "accessibilità", "disabili",
"prossimità","area", "centrale", "sicurezza", "atmosfera", "piacevole", "posizione","strategica",
"illuminata", "spazio", "facile",
"tranquilla", "negozio", "posto", "affollato", "piccolo", "disordinato")))
Driver$Prezzo <- wordStem(Driver$Prezzo)
Driver$Servizio <- wordStem(Driver$Servizio)
Driver$Ordini <- wordStem(Driver$Ordini)
Driver$Location <- wordStem(Driver$Location)
Driver
Driver <- dictionary(list(Prezzo = c("promozione", "risparmio", "qualità", "prezzo", "economicità",
"economico", "concorrenziali", "sconto",
"offerta", "budget", "ragionevole","costo", "sostenibile",
"convenienti", "sottocosto"),
Servizio =  c("rapidità", "Empatia", "professionale", "supporto",
"risoluzione","problemi",  "cordialità", "assistenza", "vendita",
"immediata", "efficienza", "cortese", "reclami",
"competenza", "cliente", "flessibilità", "tempestività",
"servizio", "accoglienza", "caloroso", "gentile", "personal", "competente", "disponibile", "male",
"lento", "disorganizzato", "disordinato", "scortese", "cafone", "garanzia", "reso", "account"),
Ordini = c("transazione", "acquisto", "pagamento", "tempo", "consegna",
"ordine", "opzioni", "modalità", "ritiro",
"rimborso", "conferma", "tracciabilità", "facilità",
"catalogo", "online","checkout", "Ssntita", "garanzia", "reso", "account"),
Location = c("accesso", "facilitato", "ampio", "parcheggio", "zona", "geografica",
"ambiente", "accogliente", "strutture", "moderne",
"punto", "vendita", "facilità", "raggiungimento", "accessibilità", "disabili",
"prossimità","area", "centrale", "sicurezza", "atmosfera", "piacevole", "posizione","strategica",
"illuminata", "spazio", "facile",
"tranquilla", "negozio", "posto", "affollato", "piccolo", "disordinato")))
Driver <- dictionary(list(prezzo = c("promozione", "risparmio", "qualità", "prezzo", "economicità",
"economico", "concorrenziali", "sconto",
"offerta", "budget", "ragionevole","costo", "sostenibile",
"convenienti", "sottocosto"),
servizio =  c("rapidità", "Empatia", "professionale", "supporto",
"risoluzione","problemi",  "cordialità", "assistenza", "vendita",
"immediata", "efficienza", "cortese", "reclami",
"competenza", "cliente", "flessibilità", "tempestività",
"servizio", "accoglienza", "caloroso", "gentile", "personal", "competente", "disponibile", "male",
"lento", "disorganizzato", "disordinato", "scortese", "cafone", "garanzia", "reso", "account"),
ordini = c("transazione", "acquisto", "pagamento", "tempo", "consegna",
"ordine", "opzioni", "modalità", "ritiro",
"rimborso", "conferma", "tracciabilità", "facilità",
"catalogo", "online","checkout", "Ssntita", "garanzia", "reso", "account"),
location = c("accesso", "facilitato", "ampio", "parcheggio", "zona", "geografica",
"ambiente", "accogliente", "strutture", "moderne",
"punto", "vendita", "facilità", "raggiungimento", "accessibilità", "disabili",
"prossimità","area", "centrale", "sicurezza", "atmosfera", "piacevole", "posizione","strategica",
"illuminata", "spazio", "facile",
"tranquilla", "negozio", "posto", "affollato", "piccolo", "disordinato")))
stem_words <- function(words) {
stemmed_words <- wordStem(words, language = "italian")
return(stemmed_words)
}
Driver$prezzo <- stem_words(prezzo)
str(Driver)
View(Driver_Conv_Rev)
Driver$prezzo <- stem_words(prezzo)
Driver$servizio <- stem_words(servizio)
Driver$prezzo <- stem_words(Driver$prezzo)
Driver$servizio <- stem_words(servizio)
Driver$servizio <- stem_words(Driver$servizio)
Driver$ordini <- stem_words(Driver$ordini)
Driver$location <- stem_words(Driver$location)
Driver
Driver_Review <- dfm_lookup(Dfm_Totale,Driver)
Driver_Conv_Rev <- convert(Driver_Review, to = "data.frame")
apply(Driver_Conv_Rev[,2:5],2,sum)
# LIBRERIE ----
# Dataset
library(readxl)
library(writexl)
# Directory
library(rstudioapi)
# Pre-processing
library(quanteda)
library(quanteda.textstats)
library(SnowballC)
# Algoritmi
library(naivebayes)
library(randomForest)
library(iml)
library(future)
library(future.callr)
library(e1071)
library(reshape2)
library(cvTools)
library(caret)
# Grafici
library(ggplot2)
library(gridExtra)
library(quanteda.textplots)
View(Driver_Conv_Rev)
Driver_Conv_Rev <- cbind(Dfm_Totale@docvars$ID, Driver_Conv_Rev)
View(Driver_Conv_Rev)
# Manipolazione
library(dplyr)
DriverAnalysis <- full_join(Driver_Conv_Rev, Ita_StoresReview)
View(Driver_Conv_Rev)
Driver_Conv_Rev <- convert(Driver_Review, to = "data.frame")
Driver_Conv_Rev <- cbind(ID = Dfm_Totale@docvars$ID, Driver_Conv_Rev)
View(Driver_Conv_Rev)
DriverAnalysis <- full_join(Driver_Conv_Rev, Ita_StoresReview)
View(DriverAnalysis)
DriverAnalysis <- full_join(Ita_StoresReview, DriverAnalysis)
View(DriverAnalysis)
# LIBRERIE ----
install.packages("syuzhet")
library(syuzhet)
Dizionario <- get_sentiment_dictionary(dictionary = 'nrc',
language = "italian")
apply(Driver_Conv_Rev[,2:5],2,sum)
Driver <- dictionary(list(prezzo = c("promozione", "risparmio", "qualità", "prezzo", "economicità",
"economico", "concorrenziali", "sconto",
"offerta", "budget", "ragionevole","costo", "sostenibile",
"convenienti", "sottocosto"),
servizio =  c("rapidità", "Empatia", "professionale", "supporto",
"risoluzione","problemi",  "cordialità", "assistenza", "vendita",
"immediata", "efficienza", "cortese", "reclami",
"competenza", "cliente", "flessibilità", "tempestività",
"servizio", "accoglienza", "caloroso", "gentile", "personal", "competente", "disponibile", "male",
"lento", "disorganizzato", "disordinato", "scortese", "cafone", "garanzia", "reso", "account"),
ordini = c("transazione", "acquisto", "pagamento", "tempo", "consegna",
"ordine", "opzioni", "modalità", "ritiro",
"rimborso", "conferma", "tracciabilità", "facilità",
"catalogo", "online","checkout", "Ssntita", "garanzia", "reso", "account"),
location = c("accesso", "facilitato", "ampio", "parcheggio", "zona", "geografica",
"ambiente", "accogliente", "strutture", "moderne",
"punto", "vendita", "facilità", "raggiungimento", "accessibilità", "disabili",
"prossimità","area", "centrale", "sicurezza", "atmosfera", "piacevole", "posizione","strategica",
"illuminata", "spazio", "facile",
"tranquilla", "negozio", "posto", "affollato", "piccolo", "disordinato")))
Driver$prezzo <- stem_words(Driver$prezzo)
Driver$servizio <- stem_words(Driver$servizio)
Driver$ordini <- stem_words(Driver$ordini)
Driver$location <- stem_words(Driver$location)
Driver_Review <- dfm_lookup(Dfm_Totale,Driver)
Driver_Conv_Rev <- convert(Driver_Review, to = "data.frame")
Driver_Conv_Rev <- cbind(ID = Dfm_Totale@docvars$ID, Driver_Conv_Rev)
apply(Driver_Conv_Rev[,2:5],2,sum)
View(Driver_Conv_Rev)
apply(Driver_Conv_Rev[,3:5],2,sum)
apply(Driver_Conv_Rev[,3:6],2,sum)
Driver <- dictionary(list(prezzo = c("promozione", "risparmio", "qualità", "prezzo", "economicità",
"economico", "concorrenziali", "sconto",
"offerta", "budget", "ragionevole","costo", "sostenibile",
"convenienti", "sottocosto", "eccezional", "super", "miglior", "ben",
"top", "futur", "offert", "convenient", "risparm", "assurd", "super", "pazzesc", "gratis"),
servizio =  c("rapidità", "Empatia", "professionale", "supporto",
"risoluzione","problemi",  "cordialità", "assistenza", "vendita",
"immediata", "efficienza", "cortese", "reclami",
"competenza", "cliente", "flessibilità", "tempestività",
"servizio", "accoglienza", "caloroso", "gentile", "personal", "competente", "disponibile", "male",
"lento", "disorganizzato", "disordinato", "scortese", "cafone", "garanzia", "reso", "account",
"signor", "reparto", "richiest", "graz", "eccezional", "inform", "miglior", "ragazz",
"rispost", "gent", "gentilissim", "rispett", "competent", "bell", "ringraz", "aiut",
"pront", "addett", "pessim", "pazienz", "ore", "benissim", "purtropp", "purtropp", "problem",
"incompetent", "rivolg", "compl", "ben", "consigl", "prossim", "buon", "gentilezz", "educ",
"simpat", "dispon", "attenzion", "qualif", "aspett", "grandissim", "disponibil", "esigent", "top",
"giovan", "assist", "futur", "risolt", "bravissim", "commess", "brav", "spieg", "dubb", "vergogn",
"inutil", "maleduc", "pochissim", "signorin", "bellissim", "perfett", "attent", "super",
"pazzesc", "soluzion", "difett", "truff", "qualit", "normal", "scortes", "intelligent"),
ordini = c("transazione", "acquisto", "pagamento", "tempo", "consegna",
"ordine", "opzioni", "modalità", "ritiro",
"rimborso", "conferma", "tracciabilità", "facilità",
"catalogo", "online","checkout", "garanzia", "reso", "account", "bell", "pessim", "nuov",
"benissim", "purtropp", "problem", "ben", "buon", "aspett", "attesa", "top", "futur", "risolt",
"vergogn", "inutil", "bellissim", "assurd", "super", "difett", "truff"),
location = c("accesso", "facilitato", "ampio", "parcheggio", "zona", "geografica",
"ambiente", "accogliente", "strutture", "moderne",
"punto", "vendita", "facilità", "raggiungimento", "accessibilità", "disabili",
"prossimità","area", "centrale", "sicurezza", "atmosfera", "piacevole", "posizione","strategica",
"illuminata", "spazio", "facile",
"tranquilla", "negozio", "posto", "affollato", "piccolo", "disordinato", "bell", "ben")))
Driver$prezzo <- stem_words(Driver$prezzo)
Driver$servizio <- stem_words(Driver$servizio)
Driver$ordini <- stem_words(Driver$ordini)
Driver$location <- stem_words(Driver$location)
Driver_Review <- dfm_lookup(Dfm_Totale,Driver)
Driver_Conv_Rev <- convert(Driver_Review, to = "data.frame")
Driver_Conv_Rev <- cbind(ID = Dfm_Totale@docvars$ID, Driver_Conv_Rev)
apply(Driver_Conv_Rev[,3:6],2,sum)
DriverAnalysis <- full_join(Ita_StoresReview, DriverAnalysis)
Dizionario <- get_sentiment_dictionary(dictionary = 'nrc',
language = "italian")
Store_reviews_sentiment <- get_sentiment(Corpus_Totale,
method = 'nrc', language = "italian")
library(readxl)
library(writexl)
# Directory
library(rstudioapi)
# Pre-processing
library(quanteda)
library(quanteda.textstats)
library(SnowballC)
# Driver Analysis
library(dplyr)
library(syuzhet)
# Algoritmi
library(naivebayes)
library(randomForest)
library(iml)
library(future)
library(future.callr)
library(e1071)
library(reshape2)
library(cvTools)
library(caret)
# Grafici
library(ggplot2)
library(gridExtra)
library(quanteda.textplots)
apply(Driver_Conv_Rev[,3:6],2,sum)
prop.table(apply(Driver_Conv_Rev[,2:5],2,sum)) # da sistemare
prop.table(apply(Driver_Conv_Rev[,3:6],2,sum)) # da sistemare
View(DriverAnalysis)
View(DriverAnalysis)
Store_reviews_sentiment <- get_sentiment(Corpus_Totale,
method = 'nrc', language = "italian")
DriverAnalysis$sentimentAnalysis <- Store_reviews_sentiment
View(DriverAnalysis)
DriverAnalysis$sentiment_labels <- ifelse(DriverAnalysis$sentiment < 0, "Negativo",
ifelse(Campione$sentiment == 0, "Neutro",
"Positivo"))
View(DriverAnalysis)
DriverAnalysis$sentiment_labels <- ifelse(DriverAnalysis$sentimentAnalysis < 0, "Negativo",
ifelse(Campione$sentimentAnalysis == 0, "Neutro",
"Positivo"))
DriverAnalysis$sentiment_labels <- ifelse(DriverAnalysis$sentimentAnalysis < 0, "Negativo",
ifelse(DriverAnalysis$sentimentAnalysis == 0, "Neutro",
"Positivo"))
View(DriverAnalysis)
DriverAnalysis$sentiment_labels <- ifelse(DriverAnalysis$sentimentAnalysis > 0, "Positivo","Negativo")
View(DriverAnalysis)
DriverAnalysis$sentiment_labels <- ifelse(DriverAnalysis$sentimentAnalysis < 0, "Negativo",
ifelse(DriverAnalysis$sentimentAnalysis == 0, "Neutro",
"Positivo"))
View(DriverAnalysis)
RatingXsentiment <- as.data.frame(table(DriverAnalysis$sentimentAnalysis_labels, DriverAnalysis$rating))
View(RatingXsentiment)
View(DriverAnalysis)
RatingXsentiment <- as.data.frame(table(DriverAnalysis$sentimentAnalysis_labels, DriverAnalysis$score_rating))
table(DriverAnalysis$score_rating)
table(DriverAnalysis$sentiment_labels)
table(DriverAnalysis$sentiment_labels, DriverAnalysis$score_rating)
RatingXsentiment <- as.data.frame(table(DriverAnalysis$sentimentAnalysis_labels, DriverAnalysis$score_rating))
RatingXsentiment <- table(DriverAnalysis$sentimentAnalysis_labels, DriverAnalysis$score_rating)
RatingXsentiment <- table(DriverAnalysis$sentimentAnalysis_labels, DriverAnalysis$score_rating)
table(DriverAnalysis$sentiment_labels, DriverAnalysis$score_rating)
RatingXsentiment <- table(DriverAnalysis$sentiment_labels, DriverAnalysis$score_rating)
RatingXsentiment <- table(DriverAnalysis$sentiment_labels, DriverAnalysis$score_rating)
RatingXsentiment <- as.data.frame(RatingXsentiment)
ggplot(RatingXsentiment,aes(Var2, Freq, fill=Var1))+
geom_bar(position="dodge",stat="identity") +
scale_fill_manual(values = c("#CA3432", "darkseagreen")) +
labs(title = "Come cambia il valore del sentiment al variare del rating?") +
theme(axis.text.x = element_text(color="#993333", angle=90)) +
coord_flip() +
ylab(label="Valori assoluti") +
xlab("Rating") +
guides(fill=guide_legend(title="sentiment")) +
theme(plot.title = element_text(color = "black", size = 12, face = "plain"),
plot.subtitle = element_text(face = "plain"),
axis.title=element_text(size=10,face="plain"),
axis.text= element_text(size =10, face = "italic"))
View(RatingXsentiment)
colnames(RatingXsentiment) <- c("Sentiment","Rating","Freq")
View(RatingXsentiment)
ggplot(RatingXsentiment[RatingXsentiment$Sentiment != "Neutro",],aes(Var2, Freq, fill=Var1))+
geom_bar(position="dodge",stat="identity") +
scale_fill_manual(values = c("#CA3432", "darkseagreen")) +
labs(title = "Come cambia il valore del sentiment al variare del rating?") +
theme(axis.text.x = element_text(color="#993333", angle=90)) +
coord_flip() +
ylab(label="Valori assoluti") +
xlab("Rating") +
guides(fill=guide_legend(title="sentiment")) +
theme(plot.title = element_text(color = "black", size = 12, face = "plain"),
plot.subtitle = element_text(face = "plain"),
axis.title=element_text(size=10,face="plain"),
axis.text= element_text(size =10, face = "italic"))
ggplot(RatingXsentiment[RatingXsentiment$Sentiment != "Neutro",],aes(Rating, Freq, fill=Sentiment))+
geom_bar(position="dodge",stat="identity") +
scale_fill_manual(values = c("#CA3432", "darkseagreen")) +
labs(title = "Come cambia il valore del sentiment al variare del rating?") +
theme(axis.text.x = element_text(color="#993333", angle=90)) +
coord_flip() +
ylab(label="Valori assoluti") +
xlab("Rating") +
guides(fill=guide_legend(title="sentiment")) +
theme(plot.title = element_text(color = "black", size = 12, face = "plain"),
plot.subtitle = element_text(face = "plain"),
axis.title=element_text(size=10,face="plain"),
axis.text= element_text(size =10, face = "italic"))
DriverAnalysis$sentiment_labels <- ifelse(DriverAnalysis$sentimentAnalysis < 0, "Negativo",
ifelse(DriverAnalysis$sentimentAnalysis == 0, "Neutro",
"Positivo"))
RatingXsentiment <- table(DriverAnalysis$sentiment_labels, DriverAnalysis$score_rating)
RatingXsentiment <- as.data.frame(RatingXsentiment)
colnames(RatingXsentiment) <- c("Sentiment","Rating","Freq")
ggplot(RatingXsentiment,aes(Rating, Freq, fill=Sentiment))+
geom_bar(position="dodge",stat="identity") +
scale_fill_manual(values = c("#CA3432", "darkseagreen")) +
labs(title = "Come cambia il valore del sentiment al variare del rating?") +
theme(axis.text.x = element_text(color="#993333", angle=90)) +
coord_flip() +
ylab(label="Valori assoluti") +
xlab("Rating") +
guides(fill=guide_legend(title="sentiment")) +
theme(plot.title = element_text(color = "black", size = 12, face = "plain"),
plot.subtitle = element_text(face = "plain"),
axis.title=element_text(size=10,face="plain"),
axis.text= element_text(size =10, face = "italic"))
DriverAnalysis$sentiment_labels <- ifelse(DriverAnalysis$sentimentAnalysis <= 0, "Negativo", "Positivo")
RatingXsentiment <- table(DriverAnalysis$sentiment_labels, DriverAnalysis$score_rating)
RatingXsentiment <- as.data.frame(RatingXsentiment)
colnames(RatingXsentiment) <- c("Sentiment","Rating","Freq")
ggplot(RatingXsentiment,aes(Rating, Freq, fill=Sentiment))+
geom_bar(position="dodge",stat="identity") +
scale_fill_manual(values = c("#CA3432", "darkseagreen")) +
labs(title = "Come cambia il valore del sentiment al variare del rating?") +
theme(axis.text.x = element_text(color="#993333", angle=90)) +
coord_flip() +
ylab(label="Valori assoluti") +
xlab("Rating") +
guides(fill=guide_legend(title="sentiment")) +
theme(plot.title = element_text(color = "black", size = 12, face = "plain"),
plot.subtitle = element_text(face = "plain"),
axis.title=element_text(size=10,face="plain"),
axis.text= element_text(size =10, face = "italic"))
ggplot(RatingXsentiment,aes(Rating, Freq, fill=Sentiment))+
geom_bar(position="stack",stat="identity") +
scale_fill_manual(values = c("#CA3432", "darkseagreen")) +
labs(title = "Come cambia il valore del sentiment al variare del rating?") +
theme(axis.text.x = element_text(color="#993333", angle=90)) +
coord_flip() +
ylab(label="Valori assoluti") +
xlab("Rating") +
guides(fill=guide_legend(title="sentiment")) +
theme(plot.title = element_text(color = "black", size = 12, face = "plain"),
plot.subtitle = element_text(face = "plain"),
axis.title=element_text(size=10,face="plain"),
axis.text= element_text(size =10, face = "italic"))
EmotionAnalysis <- get_nrc_sentiment(Corpus_Totale)
barplot(
sort(colSums(prop.table(EmotionAnalysis[, 1:8]))),
horiz = TRUE,
cex.names = 0.7,
las = 1,
main = "Le emozioni nel corpus", xlab="Proporzioni",
col = "#8C96C6"
)
EmotionAnalysis
EmotionAnalysis <- get_nrc_sentiment(Corpus_Totale)
barplot(
sort(colSums(prop.table(EmotionAnalysis[, 1:8]))),
horiz = TRUE,
cex.names = 0.7,
las = 1,
main = "Le emozioni nel corpus", xlab="Proporzioni",
col = "#8C96C6"
)
EmotionAnalysis <- get_nrc_sentiment(Corpus_Totale)
# LIBRERIE ----
install.packages(newsmap)
# LIBRERIE ----
install.packages("newsmap")
library(newsmap)
DriverAnaylisis_SemiSupervisedApproach <- dfm(Corpus_Totale,
remove_number = TRUE,
tolower = TRUE,
stem = TRUE,
dictionary = Driver)
DriverAnaylisis_SemiSupervisedApproach <- dfm(tokens(Corpus_Totale,
remove_punct = TRUE,
remove_symbols = TRUE,
remove_url = TRUE,
remove_numbers = TRUE,
dictionary(Driver)) %>%
tokens_tolower())
# NEWSMAP
help("dictionary")
DriverAnaylisis_SemiSupervisedApproach <- dfm(tokens(Corpus_Totale,
remove_punct = TRUE,
remove_symbols = TRUE,
remove_url = TRUE,
remove_numbers = TRUE) %>%
tokens_tolower() %>%
tokens_wordstem(language = "italian"),
dictionary = Driver)
help("tokens_lookup")
DriverAnaylisis_SemiSupervisedApproach <- dfm(tokens(Corpus_Totale,
remove_punct = TRUE,
remove_symbols = TRUE,
remove_url = TRUE,
remove_numbers = TRUE) %>%
tokens_tolower() %>%
tokens_wordstem(language = "italian") %>%
tokens_lookup(dictionary = Driver))
DriverAnaysis_SemiSupervisedApproach
DriverAnaylisis_SemiSupervisedApproach
rm(DriverAnaylisis_SemiSupervisedApproach)
DriverAnalysis_SemiSupervisedApproach <- dfm(tokens(Corpus_Totale,
remove_punct = TRUE,
remove_symbols = TRUE,
remove_url = TRUE,
remove_numbers = TRUE) %>%
tokens_tolower() %>%
tokens_wordstem(language = "italian") %>%
tokens_lookup(dictionary = Driver))
TextModel <- textmodel_newsmap(Dfm_Totale,
DriverAnalysis_SemiSupervisedApproach)
DriverAnalysis$SemiSupervised <- predict(TextModel)
round(prop.table(table(predict(TextModel))), 2)*100
DriverAnalysis$Dizionario <- ifelse(DriverAnalysis$prezzo > 0, "Prezzo",
ifelse(DriverAnalysis$servizio > 0, "Servizio",
ifelse(DriverAnalysis$ordini > 0, "Ordini",
ifelse(DriverAnalysis$location > 0, "Location", "NA"))))
ConfrontoRisultati <- filter(DriverAnalysis, Dizionario == "NA")
head(ConfrontoRisultati[, c("Personale", "Qualità", "Prezzo", "Location","Dizionario", "SemiSupervised")])
head(ConfrontoRisultati[, c("Prezzo", "Servizio", "Ordini", "Location","Dizionario", "SemiSupervised")])
ConfrontoRisultati
DriverAnalysis
View(DriverAnalysis)
