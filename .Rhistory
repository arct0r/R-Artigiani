valori_continui <- seq(0, 5, length.out = 10)
# Crea un dataframe con i valori continui
df <- data.frame(Valori_Continui = valori_continui)
# Specifica la palette di colori
palette_colori <- -c("blue", "green", "yellow", "orange", "red")
# Genera dei valori continui di esempio che vanno da 0 a 5
valori_continui <- seq(0, 5, length.out = 10)
# Crea un dataframe con i valori continui
df <- data.frame(Valori_Continui = valori_continui)
# Specifica la palette di colori
palette_colori <- rev(c("blue", "green", "yellow", "orange", "red"))
# Calcola gli intervalli dei valori continui
intervalli <- cut(valori_continui, breaks = 5, labels = FALSE)
# Associa un colore a ciascun intervallo
colori <- palette_colori[intervalli]
# Stampa la tabella con i valori continui e i colori associati
kbl(df, align = "c") %>%
kable_paper() %>%
column_spec(1, color = colori)
# Genera dei valori continui di esempio che vanno da 0 a 5
valori_continui <- seq(0, 5, length.out = 10)
# Crea un dataframe con i valori continui
df <- data.frame(Valori_Continui = valori_continui)
# Specifica la palette di colori
palette_colori <- rev(c("green", "yellow", "orange", "red"))
# Calcola gli intervalli dei valori continui
intervalli <- cut(valori_continui, breaks = 5, labels = FALSE)
# Associa un colore a ciascun intervallo
colori <- palette_colori[intervalli]
# Stampa la tabella con i valori continui e i colori associati
kbl(df, align = "c") %>%
kable_paper() %>%
column_spec(1, color = colori)
# Genera dei valori continui di esempio che vanno da 0 a 5
valori_continui <- seq(0, 5, length.out = 10)
# Crea un dataframe con i valori continui
df <- data.frame(Valori_Continui = valori_continui)
# Specifica la palette di colori
palette_colori <- rev(c("blue", "green", "yellow", "orange", "red"))
# Calcola gli intervalli dei valori continui
intervalli <- cut(valori_continui, breaks = 5, labels = FALSE)
# Associa un colore a ciascun intervallo
colori <- palette_colori[intervalli]
# Stampa la tabella con i valori continui e i colori associati
kbl(df, align = "c") %>%
kable_paper() %>%
column_spec(1, color = colori)
kbl(Generale) %>%
kable_classic() %>%
column_spec(c(4,7,10,13,16), color = "white",
background = colori) %>%
column_spec(c(3,9,12,15), color = "white",
background = colori) %>%
column_spec(c(6), color = "white",
background = colori) %>%
add_header_above(c(" " = 1," Generale" = 3, "Prezzo" = 3,"Servizio" = 3,"Ordini" = 3,"Location" = 3))
# TABELLA DRIVER RATING
kbl(Generale) %>%
kable_classic() %>%
column_spec(c(4,7,10,13,16), color = "white",
background = spec_color2(Generale$`Media score`, palette = paletteer_d("rcartocolor::Temps"))) %>%
column_spec(c(3,9,12,15), color = "white",
background = spec_color2(Generale$`Media sentiment`, palette = paletteer_d("rcartocolor::Temps"))) %>%
column_spec(c(6), color = "white",
background = spec_color2(Generale[,6], palette = paletteer_d("rcartocolor::Temps"))) %>%
add_header_above(c(" " = 1," Generale" = 3, "Prezzo" = 3,"Servizio" = 3,"Ordini" = 3,"Location" = 3))
# TABELLA DRIVER RATING
kbl(Generale) %>%
kable_classic() %>%
column_spec(c(4,7,10,13,16), color = "white",
background = spec_color2(Generale$`Media score`, palette = paletteer_d("rcartocolor::Temps"))) %>%
column_spec(c(3,9,12,15), color = "white",
background = spec_color2(Generale$`Media sentiment`, palette = paletteer_d("rcartocolor::Temps"))) %>%
add_header_above(c(" " = 1," Generale" = 3, "Prezzo" = 3,"Servizio" = 3,"Ordini" = 3,"Location" = 3))
# TABELLA DRIVER RATING
kbl(Generale) %>%
kable_classic() %>%
column_spec(c(4,7,10,13,16), color = "white",
background = spec_color2(Generale$`Media score`, palette = paletteer_d("rcartocolor::Temps"))) %>%
column_spec(c(3,6,9,12,15), color = "white",
background = spec_color2(Generale$`Media sentiment`, palette = paletteer_d("rcartocolor::Temps"))) %>%
add_header_above(c(" " = 1," Generale" = 3, "Prezzo" = 3,"Servizio" = 3,"Ordini" = 3,"Location" = 3))
# GRAFICI
Generale$`Media sentiment`
colnames(Generale2) <- c("Generale_Numero_reviews, Generale_Media_score, Generale_Media_sentiment")
Generale2 <- Generale
colnames(Generale2) <- c("Generale_Numero_reviews, Generale_Media_score, Generale_Media_sentiment")
View(Generale2)
View(Generale2)
Generale2 <- Generale
names(Generale2) <- c("Generale_Numero_reviews, Generale_Media_score, Generale_Media_sentiment")
View(Generale2)
Generale2 <- Generale
colnames(Generale2) <- c("Generale_Numero_reviews, Generale_Media_score, Generale_Media_sentiment")
View(Generale)
View(Generale2)
Generale2 <- Generale
colnames(Generale2)[1:4] <- c("Player", "Generale_Numero_reviews", "Generale_Media_score", "Generale_Media_sentiment")
View(Generale2)
kbl(Generale) %>%
kable_classic() %>%
column_spec(c(7,10,13,16), color = "white",
background = spec_color2(Generale$`Media score`, palette = paletteer_d("rcartocolor::Temps"))) %>%
column_spec(c(6,9,12,15), color = "white",
background = spec_color2(Generale$`Media sentiment`, palette = paletteer_d("rcartocolor::Temps"))) %>%
column_spec(c(3), color = "white",
background = spec_color2(Generale$`Generale_Media_score`, palette = paletteer_d("rcartocolor::Temps"))) %>%
column_spec(c(4), color = "white",
background = spec_color2(Generale$`Generale_Media_sentiment`, palette = paletteer_d("rcartocolor::Temps"))) %>%
add_header_above(c(" " = 1," Generale" = 3, "Prezzo" = 3,"Servizio" = 3,"Ordini" = 3,"Location" = 3))
kbl(Generale) %>%
kable_classic() %>%
column_spec(c(7,10,13,16), color = "white",
background = spec_color2(Generale$`Media score`, palette = paletteer_d("rcartocolor::Temps"))) %>%
column_spec(c(6,9,12,15), color = "white",
background = spec_color2(Generale$`Media sentiment`, palette = paletteer_d("rcartocolor::Temps"))) %>%
column_spec(c(3), color = "white",
background = spec_color2(Generale$Generale_Media_score, palette = paletteer_d("rcartocolor::Temps"))) %>%
column_spec(c(4), color = "white",
background = spec_color2(Generale$Generale_Media_sentiment, palette = paletteer_d("rcartocolor::Temps"))) %>%
add_header_above(c(" " = 1," Generale" = 3, "Prezzo" = 3,"Servizio" = 3,"Ordini" = 3,"Location" = 3))
# TABELLA DRIVER RATING
kbl(Generale) %>%
kable_classic() %>%
column_spec(c(7,10,13,16), color = "white",
background = spec_color2(Generale$`Media score`, palette = paletteer_d("rcartocolor::Temps"))) %>%
column_spec(c(6,9,12,15), color = "white",
background = spec_color2(Generale$`Media sentiment`, palette = paletteer_d("rcartocolor::Temps"))) %>%
column_spec(3, color = "white",
background = spec_color2(Generale$Generale_Media_score, palette = paletteer_d("rcartocolor::Temps"))) %>%
column_spec(4, color = "white",
background = spec_color2(Generale$Generale_Media_sentiment, palette = paletteer_d("rcartocolor::Temps"))) %>%
add_header_above(c(" " = 1," Generale" = 3, "Prezzo" = 3,"Servizio" = 3,"Ordini" = 3,"Location" = 3))
# LIBRERIE ----
# Dataset
library(readxl)
library(writexl)
# Directory
library(rstudioapi)
# Pre-processing
library(quanteda)
library(quanteda.textstats)
library(SnowballC) # stemming delle keywords
# Driver Analysis
library(dplyr)
library(syuzhet)
library(newsmap)
# Algoritmi
library(naivebayes)
library(randomForest)
library(iml)
library(future)
library(future.callr)
library(e1071)
library(reshape2)
library(cvTools)
library(caret)
# Grafici
library(ggplot2)
library(gridExtra)
library(quanteda.textplots)
# Tabelle
library(kableExtra)
library(flextable)
library(officer)
# LIBRERIE ----
# Dataset
library(readxl)
library(writexl)
# Directory
library(rstudioapi)
# Pre-processing
library(quanteda)
library(quanteda.textstats)
library(SnowballC) # stemming delle keywords
# Driver Analysis
library(dplyr)
library(syuzhet)
library(newsmap)
# Algoritmi
library(naivebayes)
library(randomForest)
library(iml)
library(future)
library(future.callr)
library(e1071)
library(reshape2)
library(cvTools)
library(caret)
# Grafici
library(ggplot2)
library(gridExtra)
library(quanteda.textplots)
# Tabelle
library(kableExtra)
library(flextable)
library(officer)
# LIBRERIE ----
# Dataset
library(readxl)
library(writexl)
# Directory
library(rstudioapi)
# Pre-processing
library(quanteda)
library(quanteda.textstats)
library(SnowballC) # stemming delle keywords
# Driver Analysis
library(dplyr)
library(syuzhet)
library(newsmap)
# Algoritmi
library(naivebayes)
library(randomForest)
library(iml)
library(future)
library(future.callr)
library(e1071)
library(reshape2)
library(cvTools)
library(caret)
# Grafici
library(ggplot2)
library(gridExtra)
library(quanteda.textplots)
# Tabelle
library(kableExtra)
library(flextable)
library(officer)
# LIBRERIE ----
# Dataset
library(readxl)
library(writexl)
# Directory
library(rstudioapi)
# Pre-processing
library(quanteda)
library(quanteda.textstats)
library(SnowballC) # stemming delle keywords
# Driver Analysis
library(dplyr)
library(syuzhet)
library(newsmap)
# Algoritmi
library(naivebayes)
library(randomForest)
library(iml)
library(future)
library(future.callr)
library(e1071)
library(reshape2)
library(cvTools)
library(caret)
# Grafici
library(ggplot2)
library(gridExtra)
library(quanteda.textplots)
# Tabelle
library(kableExtra)
library(flextable)
library(officer)
# LIBRERIE ----
# Dataset
library(readxl)
library(writexl)
# Directory
library(rstudioapi)
# Pre-processing
library(quanteda)
library(quanteda.textstats)
library(SnowballC) # stemming delle keywords
# Driver Analysis
library(dplyr)
library(syuzhet)
library(newsmap)
# Algoritmi
library(naivebayes)
library(randomForest)
library(iml)
library(future)
library(future.callr)
library(e1071)
library(reshape2)
library(cvTools)
library(caret)
# Grafici
library(ggplot2)
library(gridExtra)
library(quanteda.textplots)
# Tabelle
library(kableExtra)
library(flextable)
library(officer)
# LIBRERIE ----
# Dataset
library(readxl)
library(writexl)
# Directory
library(rstudioapi)
# Pre-processing
library(quanteda)
library(quanteda.textstats)
library(SnowballC) # stemming delle keywords
# Driver Analysis
library(dplyr)
library(syuzhet)
library(newsmap)
# Algoritmi
library(naivebayes)
library(randomForest)
library(iml)
library(future)
library(future.callr)
library(e1071)
library(reshape2)
library(cvTools)
library(caret)
# Grafici
library(ggplot2)
library(gridExtra)
library(quanteda.textplots)
# Tabelle
library(kableExtra)
library(flextable)
library(officer)
# LIBRERIE ----
# Dataset
library(readxl)
library(writexl)
# Directory
library(rstudioapi)
# Pre-processing
library(quanteda)
library(quanteda.textstats)
library(SnowballC) # stemming delle keywords
# Driver Analysis
library(dplyr)
library(syuzhet)
library(newsmap)
# Algoritmi
library(naivebayes)
library(randomForest)
library(iml)
library(future)
library(future.callr)
library(e1071)
library(reshape2)
library(cvTools)
library(caret)
# Grafici
library(ggplot2)
library(gridExtra)
library(quanteda.textplots)
# Tabelle
library(kableExtra)
library(flextable)
library(officer)
# 1: DATASET E PULIZIA (Corpus, Dfm) ----
# Directory della cartella condivisa
setwd(dirname(getActiveDocumentContext()$path))
# Dataset
StoresReview <- read_excel("GRUPPO 3-4-5. Industry elettronica.xlsx")
# Aggiunta Primary key a sinistra del dataframe
StoresReview <- cbind(ID = seq(1:nrow(StoresReview)), StoresReview)
table(StoresReview$lang_value) # Presenza di altre lingue
# Decidiamo di prendere in considerazione solo le recensioni in ITALIANO.
# Eliminiamo le recensioni vuote e manteniamo solo quelle in lingua italiana.
Ita_StoresReview <- StoresReview[(StoresReview$lang_value == "it" |
is.na(StoresReview$lang_value) == TRUE) &
is.na(StoresReview$text) == FALSE,]
# Putroppo l'algoritmo di deeplearning ha assegnato valori in lang_value
# diversi da it e NA anche a delle recensioni in italiano, quindi li elimina.
kbl(Ita_StoresReview[1:5, ], longtable = T, booktabs = T,
caption = "Il dataset") %>%
kable_styling(c("bordered", "condensed", "hover"),
full_width = F, font_size = 11) %>%
row_spec(0, color = "black", bold = T, background = "#b8daba") %>%
column_spec(2, width = "20em", width_min="2in", color = "black" )
kbl(Ita_StoresReview[1:10, ], longtable = T, booktabs = T,
caption = "Il dataset") %>%
kable_styling(c("bordered", "condensed", "hover"),
full_width = F, font_size = 11) %>%
row_spec(0, color = "black", bold = T, background = "#b8daba") %>%
column_spec(2, width = "20em", width_min="2in", color = "black" )
kbl(Ita_StoresReview[1:10, ], longtable = T, booktabs = T,
caption = "Il dataset") %>%
kable_styling(c("bordered", "condensed", "hover"),
full_width = F, font_size = 11) %>%
row_spec(0, color = "black", bold = T, background = "#b8daba") %>%
column_spec(2, width = "20em", width_min="2in", color = "black" )
table(StoresReview$lang_value)
table(StoresReview$social)
table(StoresReview$Player)
kbl(Ita_StoresReview[1:10, ], longtable = T, booktabs = T,
caption = "Il dataset") %>%
kable_styling(c("bordered", "condensed", "hover"),
full_width = F, font_size = 11) %>%
row_spec(0, color = "black", bold = T, background = "#b8daba") %>%
column_spec(2, width = "20em", width_min="2in", color = "black" )
table(StoresReview$lang_value)
table(StoresReview$social, StoresReview$Player)
kbl(Ita_StoresReview[1:5, ], longtable = T, booktabs = T,
caption = "Il dataset") %>%
kable_styling(c("bordered", "condensed", "hover"),
full_width = F, font_size = 11) %>%
row_spec(0, color = "black", bold = T, background = "#b8daba") %>%
column_spec(2, width = "20em", width_min="2in", color = "black" )
table(StoresReview$lang_value)
table(StoresReview$social, StoresReview$Player)
table(StoresReview$lang_value)
table(StoresReview$social, StoresReview$Player)
kbl(Ita_StoresReview[1:5, ], longtable = T, booktabs = T,
caption = "Il dataset") %>%
kable_styling(c("bordered", "condensed", "hover"),
full_width = F, font_size = 11) %>%
row_spec(0, color = "black", bold = T, background = "#b8daba") %>%
column_spec(2, width = "20em", width_min="2in", color = "black" )
kbl(Ita_StoresReview[1:5, ], longtable = T, booktabs = T,
caption = "Il dataset") %>%
kable_styling(c("bordered", "condensed", "hover"),
full_width = F, font_size = 11) %>%
row_spec(0, color = "black", bold = T, background = "#b8daba") %>%
column_spec(2, width = "20em", width_min="2in", color = "black" )
table(StoresReview$lang_value)
table(StoresReview$social, StoresReview$Player)
kbl(Ita_StoresReview[1:5, ], longtable = T, booktabs = T,
caption = "Dataset Negozi di Elettronica, Recensioni") %>%
kable_styling(c("bordered", "condensed", "hover"),
full_width = F, font_size = 11) %>%
row_spec(0, color = "black", bold = T, background = "#b8daba") %>%
column_spec(2, width = "20em", width_min="2in", color = "black" )
table(StoresReview$lang_value)
table(StoresReview$social, StoresReview$Player)
# Creazione corpus
Corpus_Totale <- corpus(Ita_StoresReview)
# Creazione dfm
Dfm_Totale <- dfm(tokens(Corpus_Totale,
remove_punct = TRUE,
remove_symbols = TRUE,
remove_url = TRUE,
remove_numbers = TRUE) %>%
tokens_tolower() %>%
tokens_remove(c(stopwords("italian"))) %>%
tokens_wordstem(language = "italian")) %>%
dfm_trim(min_termfreq = 10,
max_termfreq = 500, # Abbiamo messo un tetto per non considerare i 3 brand
min_docfreq = 2)
# Raggruppiamo i tag e gli hashtag
Parole_Brutte <- colnames(Dfm_Totale)[grepl("^\\s*[#@]", trimws(colnames(Dfm_Totale)))]
# Li togliamo perché non ci saranno utili nell'analisi
Dfm_Totale <- Dfm_Totale[,!(colnames(Dfm_Totale) %in% Parole_Brutte)]
# check
dim(Dfm_Totale) # 3622 testi e 869 features
kbl(StoresReview[1:5, ], longtable = T, booktabs = T,
caption = "Dataset Negozi di Elettronica, Recensioni") %>%
kable_styling(c("bordered", "condensed", "hover"),
full_width = F, font_size = 11) %>%
row_spec(0, color = "black", bold = T, background = "#b8daba") %>%
column_spec(2, width = "20em", width_min="2in", color = "black" )
kbl(StoresReview[1:10, ], longtable = T, booktabs = T,
caption = "Dataset Negozi di Elettronica, Recensioni") %>%
kable_styling(c("bordered", "condensed", "hover"),
full_width = F, font_size = 11) %>%
row_spec(0, color = "black", bold = T, background = "#b8daba") %>%
column_spec(2, width = "20em", width_min="2in", color = "black" )
table(StoresReview$lang_value)
table(StoresReview$social, StoresReview$Player)
apply(StoresReview,2,function(x) sum(is.na(x)))
table(StoresReview$lang_value)
table(StoresReview$social, StoresReview$Player)
print('')
apply(StoresReview,2,function(x) sum(is.na(x)))
table(StoresReview$lang_value)
table(StoresReview$social, StoresReview$Player)
print('---------------------------------------------')
apply(StoresReview,2,function(x) sum(is.na(x)))
table(StoresReview$lang_value)
table(StoresReview$social, StoresReview$Player)
print('Numero di NA:')
apply(StoresReview,2,function(x) sum(is.na(x)))
kbl(ItaStoresReview[1:10, ], longtable = T, booktabs = T,
caption = "Dataset Negozi di Elettronica, Recensioni") %>%
kable_styling(c("bordered", "condensed", "hover"),
full_width = F, font_size = 11) %>%
row_spec(0, color = "black", bold = T, background = "#b8daba") %>%
column_spec(2, width = "20em", width_min="2in", color = "black" )
kbl(Ita_StoresReview[1:10, ], longtable = T, booktabs = T,
caption = "Dataset Negozi di Elettronica, Recensioni") %>%
kable_styling(c("bordered", "condensed", "hover"),
full_width = F, font_size = 11) %>%
row_spec(0, color = "black", bold = T, background = "#b8daba") %>%
column_spec(2, width = "20em", width_min="2in", color = "black" )
# Creazione corpus
Corpus_Totale <- corpus(Ita_StoresReview)
# Creazione dfm
Dfm_Totale <- dfm(tokens(Corpus_Totale,
remove_punct = TRUE,
remove_symbols = TRUE,
remove_url = TRUE,
remove_numbers = TRUE) %>%
tokens_tolower() %>%
tokens_remove(c(stopwords("italian"))) %>%
tokens_wordstem(language = "italian")) %>%
dfm_trim(min_termfreq = 10,
max_termfreq = 500, # Abbiamo messo un tetto per non considerare i 3 brand
min_docfreq = 2)
# Raggruppiamo i tag e gli hashtag
Parole_Brutte <- colnames(Dfm_Totale)[grepl("^\\s*[#@]", trimws(colnames(Dfm_Totale)))]
# Li togliamo perché non ci saranno utili nell'analisi
Dfm_Totale <- Dfm_Totale[,!(colnames(Dfm_Totale) %in% Parole_Brutte)]
# check
dim(Dfm_Totale) # 3622 testi e 869 features
