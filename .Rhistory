bold(part = "header")
ft
ft |>
bg(j = "media_rating",
bg = scales::col_quantile(palette = c("wheat", "red"), domain =NULL)) |>
add_footer_lines("God help us. R is not that nice. Almost as bad as SQL")
table(Ita_StoresReview$Player, Ita_StoresReview$score_rating)
hist(Ita_StoresReview$Player, Ita_StoresReview$score_rating)
hist(Ita_StoresReview$score_rating, Ita_StoresReview$Player)
rm(Grafico1)
table(Ita_StoresReview$Player, Ita_StoresReview$score_rating)
Brand_rating <- as.data.frame(table(Ita_StoresReview$Player, Ita_StoresReview$score_rating))
Brand_rating <- rename(
Brand_sentiment,
"Brand" = "Var1",
"Rating" = "Var2"
)
View(Brand_rating)
Brand_rating <- rename(
Brand_rating,
"Brand" = "Var1",
"Rating" = "Var2"
)
View(Brand_rating)
ggplot(Brand_rating, aes(x = Brand, y = Rating, fill = brand)) +
geom_violin() +
labs(title = "Distribuzione del rating per brand", x = "Brand", y = "Rating")
ggplot(Brand_rating, aes(x = Brand, y = Rating, fill = Brand)) +
geom_violin() +
labs(title = "Distribuzione del rating per brand", x = "Brand", y = "Rating")
ggplot(Brand_rating, aes(x = Brand, y = Rating, fill = Freq)) +
geom_violin() +
labs(title = "Distribuzione del rating per brand", x = "Brand", y = "Rating")
ggplot(Brand_rating,aes(x = Brand, y = Freq, fill = Rating))+
geom_bar(position="stack",stat="identity") +
scale_fill_manual(values = c("#993333", "grey", "darkseagreen")) +
labs(title = "Come varia il sentiment nei diversi brand?") +
#rappresentiamo le barre in orizzontale (inverte gli assi)
#coord_flip() +
ylab(label="Valori assoluti") +
xlab("") +
#la legenda viene generata in modo automatico
guides(fill=guide_legend(title="Rating")) +
theme(plot.title = element_text(color = "black", size = 12, face = "bold"),
plot.subtitle = element_text(face = "plain"),
axis.title=element_text(size=10,face="plain"),
axis.text= element_text(size =10, face = "italic"),
axis.text.x = element_text(color="#993333", angle=45))
ggplot(Brand_rating,aes(x = Brand, y = Freq, fill = Rating))+
geom_bar(position="stack",stat="identity") +
scale_fill_manual(values = c("#993333", "#FF5733", "#FFC300", "#DAF7A6", "#7FFF00")) +
labs(title = "Come varia il sentiment nei diversi brand?") +
#rappresentiamo le barre in orizzontale (inverte gli assi)
#coord_flip() +
ylab(label="Valori assoluti") +
xlab("") +
#la legenda viene generata in modo automatico
guides(fill=guide_legend(title="Rating")) +
theme(plot.title = element_text(color = "black", size = 12, face = "bold"),
plot.subtitle = element_text(face = "plain"),
axis.title=element_text(size=10,face="plain"),
axis.text= element_text(size =10, face = "italic"),
axis.text.x = element_text(color="#993333", angle=45))
ggplot(Brand_rating,aes(x = Brand, y = Freq, fill = Rating))+
geom_bar(position="dodge",stat="identity") +
scale_fill_manual(values = c("#993333", "#FF5733", "#FFC300", "#DAF7A6", "#7FFF00")) +
labs(title = "Come varia il sentiment nei diversi brand?") +
#rappresentiamo le barre in orizzontale (inverte gli assi)
#coord_flip() +
ylab(label="Valori assoluti") +
xlab("") +
#la legenda viene generata in modo automatico
guides(fill=guide_legend(title="Rating")) +
theme(plot.title = element_text(color = "black", size = 12, face = "bold"),
plot.subtitle = element_text(face = "plain"),
axis.title=element_text(size=10,face="plain"),
axis.text= element_text(size =10, face = "italic"),
axis.text.x = element_text(color="#993333", angle=45))
ggplot(Brand_rating,aes(x = Brand, y = Freq, fill = Rating))+
geom_bar(position="dodge",stat="identity") +
scale_fill_manual(values = c("#993333", "#FF5733", "#FFC300", "#DAF7A6", "#7FFF00")) +
labs(title = "Come varia il rating nei diversi brand?") +
#rappresentiamo le barre in orizzontale (inverte gli assi)
#coord_flip() +
ylab(label="Valori assoluti") +
xlab("") +
#la legenda viene generata in modo automatico
guides(fill=guide_legend(title="Rating")) +
theme(plot.title = element_text(color = "black", size = 12, face = "bold"),
plot.subtitle = element_text(face = "plain"),
axis.title=element_text(size=10,face="plain"),
axis.text= element_text(size =10, face = "italic"),
axis.text.x = element_text(color="#993333", angle=45))
ggplot(Brand_sentiment,aes(x = Brand, y = Freq, fill = Sentiment))+
geom_bar(position="stack",stat="identity") +
scale_fill_manual(values = c("#993333", "grey", "darkseagreen")) +
labs(title = "Come varia il sentiment nei diversi brand?") +
#rappresentiamo le barre in orizzontale (inverte gli assi)
#coord_flip() +
ylab(label="Valori assoluti") +
xlab("") +
#la legenda viene generata in modo automatico
guides(fill=guide_legend(title="Sentiment")) +
theme(plot.title = element_text(color = "black", size = 12, face = "bold"),
plot.subtitle = element_text(face = "plain"),
axis.title=element_text(size=10,face="plain"),
axis.text= element_text(size =10, face = "italic"),
axis.text.x = element_text(color="#993333", angle=45))
ggplot(Brand_sentiment,aes(x = Brand, y = Freq, fill = Sentiment))+
geom_bar(position="stack",stat="identity") +
scale_fill_manual(values = c("#993333", "grey", "darkseagreen")) +
labs(title = "Come varia il sentiment nei diversi brand?") +
coord_flip() +
ylab(label="Valori assoluti") +
xlab("") +
#la legenda viene generata in modo automatico
guides(fill=guide_legend(title="Sentiment")) +
theme(plot.title = element_text(color = "black", size = 12, face = "bold"),
plot.subtitle = element_text(face = "plain"),
axis.title=element_text(size=10,face="plain"),
axis.text= element_text(size =10, face = "italic"),
axis.text.x = element_text(color="#993333", angle=45))
# check
table(Ita_StoresReview$score_rating, Ita_StoresReview$NB_sentiment)
ross_tab <- table(Ita_StoresReview$NB_sentiment, Ita_StoresReview$score_rating)
# Creazione di un grafico a matrice di confusione
heatmap(cross_tab, col = cm.colors(256), main = "Matrice di confusione tra Sentiment e Rating")
rm(ross_tab)
cross_tab <- table(Ita_StoresReview$NB_sentiment, Ita_StoresReview$score_rating)
# Creazione di un grafico a matrice di confusione
heatmap(cross_tab, col = cm.colors(256), main = "Matrice di confusione tra Sentiment e Rating")
ggplot(Brand_sentiment,aes(x = Brand, y = Freq, fill = Sentiment))+
geom_bar(position="stack",stat="identity") +
scale_fill_manual(values = c("#993333", "grey", "darkseagreen")) +
labs(title = "Come varia il sentiment nei diversi brand?") +
coord_flip() +
ylab(label="Valori assoluti") +
xlab("") +
#la legenda viene generata in modo automatico
guides(fill=guide_legend(title="Sentiment")) +
theme(plot.title = element_text(color = "black", size = 12, face = "bold"),
plot.subtitle = element_text(face = "plain"),
axis.title=element_text(size=10,face="plain"),
axis.text= element_text(size =10, face = "italic"),
axis.text.x = element_text(color="#993333", angle=45))
# Creazione di un grafico a matrice di confusione
heatmap(cross_tab, col = colorRampPalette(c("blue", "white", "red"))(256), main = "Matrice di confusione tra Sentiment e Rating")
heatmap(cross_tab, col = colorRampPalette(c("blue", "white", "red"))(256), main = "Matrice di confusione tra Sentiment e Rating")
legend("topright", legend = c("Basso", "Medio", "Alto"), fill = c("blue", "white", "red"), title = "Rating")
# Creazione del grafico a barre
ggplot(data = DriverAnalysis, aes(x = Player, y = sentimentAnalysis, fill = SemiSupervised)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Media del Sentiment_analysis per Player e Driver", x = "Player", y = "Sentiment_analysis")
ggplot(data = tuo_dataset, aes(x = "", fill = Sentiment_labels)) +
geom_bar(width = 1) +
facet_grid(. ~ Player + Driver) +
# TORTA
ggplot(data = DriverAnalysis, aes(x = "", fill = sentiment_labels)) +
geom_bar(width = 1) +
facet_grid(. ~ Player + SemiSupervised) +
labs(title = "Distribuzione di Sentiment_labels per Player e Driver", fill = "Sentiment_labels")
# TORTA
ggplot(data = DriverAnalysis, aes(x = "", fill = sentiment_labels)) +
geom_bar(width = 1) +
facet_grid(. ~ Player + SemiSupervised) +
labs(title = "Distribuzione di Sentiment_labels per Player e Driver", fill = "Sentiment_labels")
ggplot(data = DriverAnalysis, aes(x = score_rating, y = sentimentAnalysis, color = SemiSupervised)) +
geom_point() +
facet_wrap(~Player) +
labs(title = "Relazione tra Rating e Sentiment_analysis per Player e Driver", x = "Rating", y = "Sentiment_analysis")
Dati_Prezzo <- DriverAnalysis %>%
group_by(sentiment_labels) %>%
summarise(count = sum(n())/nrow(DriverAnalysis))
View(Dati_Prezzo)
ggplot(data = Dati_Prezzo, aes(x = "", y = count, fill = sentiment_labels)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
theme_void()
Torta_Prezzo <- ggplot(data = Dati_Prezzo, aes(x = "", y = count, fill = sentiment_labels)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
theme_void()
View(Dati_Prezzo)
Dati_Prezzo <- DriverAnalysis %>%
group_by(sentiment_labels & SemiSupervised) %>%
summarise(count = sum(n())/nrow(DriverAnalysis))
Dati_Prezzo <- DriverAnalysis[DriverAnalysis$SemiSupervised == "prezzo",] %>%
group_by(sentiment_labels) %>%
summarise(count = sum(n())/nrow(DriverAnalysis))
Torta_Prezzo <- ggplot(data = Dati_Prezzo, aes(x = "", y = count, fill = sentiment_labels)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
theme_void()
View(DriverAnalysis)
Dati_Prezzo <- DriverAnalysis[DriverAnalysis$SemiSupervised == "prezzo",] %>%
group_by(sentiment_labels) %>%
summarise(count = sum(n())/nrow(DriverAnalysis))
Torta_Prezzo <- ggplot(data = Dati_Prezzo, aes(x = "", y = count, fill = sentiment_labels)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
theme_void()
Dati_Servizio <- DriverAnalysis[DriverAnalysis$SemiSupervised == "servizio",] %>%
group_by(sentiment_labels) %>%
summarise(count = sum(n())/nrow(DriverAnalysis))
Torta_Servizio <- ggplot(data = Dati_Servizio, aes(x = "", y = count, fill = sentiment_labels)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
theme_void()
Dati_Ordini <- DriverAnalysis[DriverAnalysis$SemiSupervised == "ordini",] %>%
group_by(sentiment_labels) %>%
summarise(count = sum(n())/nrow(DriverAnalysis))
Torta_Ordini <- ggplot(data = Dati_Ordini, aes(x = "", y = count, fill = sentiment_labels)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
theme_void()
Dati_Location <- DriverAnalysis[DriverAnalysis$SemiSupervised == "location",] %>%
group_by(sentiment_labels) %>%
summarise(count = sum(n())/nrow(DriverAnalysis))
Torta_Location <- ggplot(data = Dati_Location, aes(x = "", y = count, fill = sentiment_labels)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
theme_void()
grid.arrange(Torta_Prezzo, Torta_Servizio, Torta_Ordini, Torta_Location)
grid.arrange(Prezzo = Torta_Prezzo, Servizio = Torta_Servizio, Ordini = Torta_Ordini, Location = Torta_Location)
rm(Torta_Location)
rm(Torta_Ordini)
rm(Torta_Prezzo)
rm(Torta_Servizio)
rm(Dati_Location)
rm(Dati_Ordini)
rm(Dati_Servizio)
rm(Dati_Prezzo)
View(DriverAnalysis)
apply(DriverAnalysis, 2, function(x) sum(is.na(x)))
View(DriverAnalysis)
heatmap(cross_tab, col = colorRampPalette(c("blue", "white", "red"))(256), main = "Matrice di confusione tra Sentiment e Rating")
legend("topright", legend = c("Basso", "Medio", "Alto"), fill = c("blue", "white", "red"), title = "Rating"
# Creazione di un grafico a matrice di confusione
heatmap(cross_tab, col = colorRampPalette(c("blue", "white", "red"))(256), main = "Matrice di confusione tra Sentiment e Rating")+
# Creazione di un grafico a matrice di confusione
heatmap(cross_tab, col = colorRampPalette(c("blue", "white", "red"))(256), main = "Matrice di confusione tra Sentiment e Rating")
legend("topright", legend = c("Basso", "Medio", "Alto"), fill = c("blue", "white", "red"), title = "Rating")
apply(DriverAnalysis, 2, function(x) sum(is.na(x)))
write_xlsx(DriverAnalysis, "Driver.xlsx")
library(readxl)
library(writexl)
# Directory
library(rstudioapi)
# Pre-processing
library(quanteda)
library(quanteda.textstats)
library(SnowballC) # stemming delle keywords
# Driver Analysis
library(dplyr)
library(syuzhet)
library(newsmap)
# Algoritmi
library(naivebayes)
library(randomForest)
library(iml)
library(future)
library(future.callr)
library(e1071)
library(reshape2)
library(cvTools)
library(caret)
# Grafici
library(ggplot2)
library(gridExtra)
library(quanteda.textplots)
library(kableExtra)
library(flextable)
library(officer)
write_xlsx(DriverAnalysis, "Driver.xlsx")
View(DriverAnalysis)
ggplot(Brand_sentiment,aes(x = Brand, y = Freq, fill = Sentiment))+
geom_bar(position="stack",stat="identity") +
scale_fill_manual(values = c("#993333", "grey", "darkseagreen")) +
labs(title = "Come varia il sentiment nei diversi brand?") +
coord_flip() +
ylab(label="Valori assoluti") +
xlab("") +
#la legenda viene generata in modo automatico
guides(fill=guide_legend(title="Sentiment")) +
theme(plot.title = element_text(color = "black", size = 12, face = "bold"),
plot.subtitle = element_text(face = "plain"),
axis.title=element_text(size=10,face="plain"),
axis.text= element_text(size =10, face = "italic"),
axis.text.x = element_text(color="#993333", angle=45))
ggplot(Brand_rating,aes(x = Brand, y = Freq, fill = Rating))+
geom_bar(position="dodge",stat="identity") +
scale_fill_manual(values = c("#993333", "#FF5733", "#FFC300", "#DAF7A6", "#7FFF00")) +
labs(title = "Come varia il rating nei diversi brand?") +
#rappresentiamo le barre in orizzontale (inverte gli assi)
#coord_flip() +
ylab(label="Valori assoluti") +
xlab("") +
#la legenda viene generata in modo automatico
guides(fill=guide_legend(title="Rating")) +
theme(plot.title = element_text(color = "black", size = 12, face = "bold"),
plot.subtitle = element_text(face = "plain"),
axis.title=element_text(size=10,face="plain"),
axis.text= element_text(size =10, face = "italic"),
axis.text.x = element_text(color="#993333", angle=45))
# Creazione di un grafico a matrice di confusione
heatmap(cross_tab, col = colorRampPalette(c("blue", "white", "red"))(256), main = "Matrice di confusione tra Sentiment e Rating")
table(DriverAnalysis$Player, DriverAnalysis$SemiSupervised["prezzo"])
table(DriverAnalysis$Player, DriverAnalysis$SemiSupervised[DriverAnalysis$SemiSupervised == "prezzo"])
table(DriverAnalysis$Player, DriverAnalysis$SemiSupervised)
Prova <- as.data.frame(table(DriverAnalysis$Player, DriverAnalysis$SemiSupervised))
View(Prova)
rm(Prova)
Driver_sentiment <- as.data.frame(table(DriverAnalysis$Player, DriverAnalysis$SemiSupervised))
View(Driver_sentiment)
Driver_sentiment <- rename(
Driver_sentiment,
"Brand" = "Var1",
"Driver" = "Var2"
)
ft |>
bg(j = "media_rating",
bg = scales::col_quantile(palette = c("wheat", "red"), domain =NULL)) |>
add_footer_lines("God help us. R is not that nice. Almost as bad as SQL")
View(Driver_sentiment)
ggplot(Driver_sentiment[Driver_sentiment$Brand == "Mediaworld",],aes(x = Brand, y = Freq, fill = Driver))+
geom_bar(position="stack",stat="identity") +
scale_fill_manual(values = c("#993333", "grey", "darkseagreen")) +
labs(title = "Come varia il sentiment nei diversi brand?") +
coord_flip() +
ylab(label="Valori assoluti") +
xlab("") +
#la legenda viene generata in modo automatico
guides(fill=guide_legend(title="Sentiment")) +
theme(plot.title = element_text(color = "black", size = 12, face = "bold"),
plot.subtitle = element_text(face = "plain"),
axis.title=element_text(size=10,face="plain"),
axis.text= element_text(size =10, face = "italic"),
axis.text.x = element_text(color="#993333", angle=45))
ggplot(Driver_sentiment[Driver_sentiment$Brand == "Mediaworld",],aes(x = Brand, y = Freq, fill = Driver))+
geom_bar(position="stack",stat="identity") +
scale_fill_manual(values = c("#993333", "grey", "darkseagreen","blue")) +
labs(title = "Come varia il sentiment nei diversi brand?") +
coord_flip() +
ylab(label="Valori assoluti") +
xlab("") +
#la legenda viene generata in modo automatico
guides(fill=guide_legend(title="Sentiment")) +
theme(plot.title = element_text(color = "black", size = 12, face = "bold"),
plot.subtitle = element_text(face = "plain"),
axis.title=element_text(size=10,face="plain"),
axis.text= element_text(size =10, face = "italic"),
axis.text.x = element_text(color="#993333", angle=45))
ggplot(Driver_sentiment[Driver_sentiment$Brand == "Mediaworld",],aes(x = Brand, y = Freq, fill = Driver))+
geom_bar(position="stack",stat="identity") +
scale_fill_manual(values = c("#993333", "grey", "darkseagreen","blue")) +
labs(title = "Come varia il sentiment nei diversi brand?") +
ylab(label="Valori assoluti") +
xlab("") +
#la legenda viene generata in modo automatico
guides(fill=guide_legend(title="Sentiment")) +
theme(plot.title = element_text(color = "black", size = 12, face = "bold"),
plot.subtitle = element_text(face = "plain"),
axis.title=element_text(size=10,face="plain"),
axis.text= element_text(size =10, face = "italic"),
axis.text.x = element_text(color="#993333", angle=45))
table(DriverAnalysis$Player, DriverAnalysis$SemiSupervised, DriverAnalysis$sentiment_labels)
rm(Driver_sentiment)
Mediaworld_driver <- as.data.frame(table(DriverAnalysis$Player[DriverAnalysis$Player = "Mediaworld",], DriverAnalysis$SemiSupervised))
Mediaworld_driver <- as.data.frame(table(DriverAnalysis$Player[DriverAnalysis$Player == "Mediaworld",], DriverAnalysis$SemiSupervised))
ggplot(Brand_sentiment,aes(x = Brand, y = Freq, fill = Sentiment))+
geom_bar(position="stack",stat="identity") +
scale_fill_manual(values = c("#993333", "grey", "darkseagreen")) +
labs(title = "Come varia il sentiment nei diversi brand?") +
coord_flip() +
ylab(label="Valori assoluti") +
xlab("") +
#la legenda viene generata in modo automatico
guides(fill=guide_legend(title="Sentiment")) +
theme(plot.title = element_text(color = "black", size = 12, face = "bold"),
plot.subtitle = element_text(face = "plain"),
axis.title=element_text(size=10,face="plain"),
axis.text= element_text(size =10, face = "italic"),
axis.text.x = element_text(color="#993333", angle=45))
ggplot(Brand_rating,aes(x = Brand, y = Freq, fill = Rating))+
geom_bar(position="dodge",stat="identity") +
scale_fill_manual(values = c("#993333", "#FF5733", "#FFC300", "#DAF7A6", "#7FFF00")) +
labs(title = "Come varia il rating nei diversi brand?") +
#rappresentiamo le barre in orizzontale (inverte gli assi)
#coord_flip() +
ylab(label="Valori assoluti") +
xlab("") +
#la legenda viene generata in modo automatico
guides(fill=guide_legend(title="Rating")) +
theme(plot.title = element_text(color = "black", size = 12, face = "bold"),
plot.subtitle = element_text(face = "plain"),
axis.title=element_text(size=10,face="plain"),
axis.text= element_text(size =10, face = "italic"),
axis.text.x = element_text(color="#993333", angle=45))
heatmap(cross_tab, col = colorRampPalette(c("blue", "white", "red"))(256), main = "Matrice di confusione tra Sentiment e Rating")
legend("topright", legend = c("Basso", "Medio", "Alto"), fill = c("blue", "white", "red"), title = "Rating")
Mediaworld_driver <- DriverAnalysis[DriverAnalysis$Player == "Mediaworld",c(14,15)]
View(Mediaworld_driver)
Unieuro_driver <- DriverAnalysis[DriverAnalysis$Player == "Unieuro",c(14,15)]
Euronics_driver <- DriverAnalysis[DriverAnalysis$Player == "Euronics",c(14,15)]
View(Mediaworld_driver)
table(Mediaworld_driver$sentiment_labels, Mediaworld_driver$SemiSupervised)
Mediaworld_driver <- as.data.frame(table(Mediaworld_driver$sentiment_labels, Mediaworld_driver$SemiSupervised))
View(Mediaworld_driver)
Unieuro_driver <- as.data.frame(table(Unieuro_driver$sentiment_labels, Mediaworld_driver$SemiSupervised))
Euronics_driver <- as.data.frame(table(Euronics_driver$sentiment_labels, Mediaworld_driver$SemiSupervised))
Unieuro_driver <- as.data.frame(table(Unieuro_driver$sentiment_labels, Unieuro_driver$SemiSupervised))
Euronics_driver <- as.data.frame(table(Euronics_driver$sentiment_labels, Euronics_driver$SemiSupervised))
View(Euronics_driver)
Mediaworld_driver <- rename(
Mediaworld_driver,
"Sentiment" = "Var1",
"Driver" = "Var2"
)
Unieuro_driver <- rename(
Unieuro_driver,
"Sentiment" = "Var1",
"Driver" = "Var2"
)
Euronics_driver <- rename(
Euronics_driver,
"Sentiment" = "Var1",
"Driver" = "Var2"
)
ggplot(Mediaworld_driver,aes(x = Driver, y = freq, fill = Sentiment))+
geom_bar(position="stack",stat="identity") +
scale_fill_manual(values = c("#993333", "grey", "darkseagreen","blue")) +
labs(title = "Come varia il sentiment nei diversi brand?") +
ylab(label="Valori assoluti") +
xlab("") +
#la legenda viene generata in modo automatico
guides(fill=guide_legend(title="Sentiment")) +
theme(plot.title = element_text(color = "black", size = 12, face = "bold"),
plot.subtitle = element_text(face = "plain"),
axis.title=element_text(size=10,face="plain"),
axis.text= element_text(size =10, face = "italic"),
axis.text.x = element_text(color="#993333", angle=45))
View(Euronics_driver)
ggplot(Mediaworld_driver,aes(x = Driver, y = Freq, fill = Sentiment))+
geom_bar(position="stack",stat="identity") +
scale_fill_manual(values = c("#993333", "grey", "darkseagreen","blue")) +
labs(title = "Come varia il sentiment nei diversi brand?") +
ylab(label="Valori assoluti") +
xlab("") +
#la legenda viene generata in modo automatico
guides(fill=guide_legend(title="Sentiment")) +
theme(plot.title = element_text(color = "black", size = 12, face = "bold"),
plot.subtitle = element_text(face = "plain"),
axis.title=element_text(size=10,face="plain"),
axis.text= element_text(size =10, face = "italic"),
axis.text.x = element_text(color="#993333", angle=45))
ggplot(Mediaworld_driver,aes(x = Driver, y = Freq, fill = Sentiment))+
geom_bar(position="stack",stat="identity") +
scale_fill_manual(values = c("#993333", "darkseagreen")) +
labs(title = "Mediaworld",
subtitle = "Come varia il sentiment nei diversi driver?") +
ylab(label="Valori assoluti") +
xlab("") +
#la legenda viene generata in modo automatico
guides(fill=guide_legend(title="Sentiment")) +
theme(plot.title = element_text(color = "black", size = 12, face = "bold"),
plot.subtitle = element_text(face = "plain"),
axis.title=element_text(size=10,face="plain"),
axis.text= element_text(size =10, face = "italic"),
axis.text.x = element_text(color="#993333", angle=45))
Mediaworld_grafico <- ggplot(Mediaworld_driver,aes(x = Driver, y = Freq, fill = Sentiment))+
geom_bar(position="stack",stat="identity") +
scale_fill_manual(values = c("#993333", "darkseagreen")) +
labs(title = "Mediaworld",
subtitle = "Come varia il sentiment nei diversi driver?") +
ylab(label="Valori assoluti") +
xlab("") +
#la legenda viene generata in modo automatico
guides(fill=guide_legend(title="Sentiment")) +
theme(plot.title = element_text(color = "black", size = 12, face = "bold"),
plot.subtitle = element_text(face = "plain"),
axis.title=element_text(size=10,face="plain"),
axis.text= element_text(size =10, face = "italic"),
axis.text.x = element_text(color="#993333", angle=45))
Unieuro_grafico <- ggplot(Unieuro_driver,aes(x = Driver, y = Freq, fill = Sentiment))+
geom_bar(position="stack",stat="identity") +
scale_fill_manual(values = c("#993333", "darkseagreen")) +
labs(title = "Unieuro",
subtitle = "Come varia il sentiment nei diversi driver?") +
ylab(label="Valori assoluti") +
xlab("") +
#la legenda viene generata in modo automatico
guides(fill=guide_legend(title="Sentiment")) +
theme(plot.title = element_text(color = "black", size = 12, face = "bold"),
plot.subtitle = element_text(face = "plain"),
axis.title=element_text(size=10,face="plain"),
axis.text= element_text(size =10, face = "italic"),
axis.text.x = element_text(color="#993333", angle=45))
Euronics_grafico <- ggplot(Euronics_driver,aes(x = Driver, y = Freq, fill = Sentiment))+
geom_bar(position="stack",stat="identity") +
scale_fill_manual(values = c("#993333", "darkseagreen")) +
labs(title = "Euronics",
subtitle = "Come varia il sentiment nei diversi driver?") +
ylab(label="Valori assoluti") +
xlab("") +
#la legenda viene generata in modo automatico
guides(fill=guide_legend(title="Sentiment")) +
theme(plot.title = element_text(color = "black", size = 12, face = "bold"),
plot.subtitle = element_text(face = "plain"),
axis.title=element_text(size=10,face="plain"),
axis.text= element_text(size =10, face = "italic"),
axis.text.x = element_text(color="#993333", angle=45))
grid.arrange(Mediaworld_grafico, Euronics_grafico, Unieuro_grafico)
